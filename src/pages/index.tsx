import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { trpc } from "../utils/trpc";
import { SideBar } from "../components/sidebar";
import MainPageTw from "../components/main/MainPageTw";

const Home: NextPage = () => {
  const hello = trpc.example.hello.useQuery({ text: "from tRPC" });
  // const {data } = useSession();
  // console.log(data);
  // console.log(data?.user?.image);
  // const avatar: string | undefined | null = data?.user?.image;



  return (
    <>
      <Head>
        <title>Home / Twitter</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <AuthShowcase/>
      <div className="z-0 box-border w-full h-full relative" >
        <div className="flex flex-col relative z-0 min-h-screen bg-bgcl">
            <div className="h-full flex shrink-0 items-stretch grow-0 ">
              <SideBar/>
              <MainPageTw />
            </div>
        </div>
      </div>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4 bg-slate-700">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
